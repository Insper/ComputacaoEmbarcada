milestone:
  mile0:
    title: 23/4
    state: open
    due_on: '2021-06-16T23:00:01Z'

issues:
  issue0:
    Title: 1 - Pino Buzzer
    Milestone: 23/4
    Body: |
      Definir e configurar pino que será usado para conectar o buzzer.

      - [ ] Atualizar `README.md` com definição do pino.
      - [ ] Inserir `#defines` no  `main.c` com valores certos
      ```c
      #define BUZZER_PIO
      #define BUZZER_PIO_ID
      #define BUZZER_PIO_IDX
      #define BUZZER_PIO_IDX_MASK
      ```
      - [ ] Atualizar função  `init()` configurando o pino do buzzer como output

      Dicas (opcional):

      - [ ] Criar função `void set_buzzer();` que coloca 1 no pino do buzzer
      - [ ] Criar função `void clear_buzzer();` que coloca 0 no pino do buzzer

      > Lembre de não fechar o issue, pedir feedback para a equipe!

  issue1:
    Title: 2 - Pino botão start/pause
    Milestone: 23/4
    Body: |
      Definir e configurar pino que será usado para conectar o botão de start/pause.

      - [ ] Atualizar `README.md` com definição do pino.
      - [ ] Inserir `#defines` no  `main.c` com valores certos
      ```c
      #define START_PIO
      #define START_PIO_ID
      #define START_PIO_IDX
      #define START_PIO_IDX_MASK
      ```
      - [ ] Atualizar função  `init()` configurando o pino do botão como input

      Dicas (opcional):

      - [ ] Criar função `int get_startstop();` que retorna o status do botão (1/0)

      > Lembre de não fechar o issue, pedir feedback para a equipe!

  issue2:
    Title: 3 - Pino seleção musica
    Milestone: 23/4
    Body: |
      Definir e configurar pino que será usado para conectar o botão de seleção musical.

      - [ ] Atualizar `README.md` com definição do pino.
      ```

      ```
      - [ ] Inserir `#defines` no  `main.c` com valores certos
      ```c
      #define SELECAO_PIO
      #define SELECAO_PIO_ID
      #define SELECAO_PIO_IDX
      #define SELECAO_PIO_IDX_MASK
      ```
      - [ ] Atualizar função  `init()` configurando o pino do botão como input

      Dicas (opcional):

      - [ ] Criar função `int get_selecao();` que retorna o status do botão (1/0)

      > Lembre de não fechar o issue, pedir feedback para a equipe!

  issue3:
    Title: 4 - buzzer_test(int freq)
    Milestone: 23/4
    Body: |
      Crie uma função (buzzer_test(int freq)) que gera no pino do
      buzzer uma onda quadrada de frequência definida, para isso você
      deve usar:

      - `pio_set()`
      - `pio_clear()`
      - `delay_ns()` / `delay_ms`

      freq é definido em Hz.

      - [ ] Implementar funcão
      - [ ] Link para um vídeo da função funcionando

      > Lembre de não fechar o issue, pedir feedback para a equipe!
